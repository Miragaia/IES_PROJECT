version: '3.1'


services:
  react:
    build:
      context: ./sensorsafe
      dockerfile: Dockerfile
    #volumes:
    #  - './app/src:/app/src'
    ports:
      - 3000:3000
    stdin_open: true
    networks:
      mongo-compose-network:
        ipv4_address: 172.1.0.3

  api:
    build:
      context: ../API
      dockerfile: Dockerfile
    depends_on:
      - mongo
    networks:
      mongo-compose-network:
        ipv4_address: 172.1.0.3

  mongo:
    image: mongo:4.4
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./.docker/mongo-data:/data/db
    networks:
      mongo-compose-network:
        ipv4_address: 172.1.0.5

  rabbitmq:
    image: rabbitmq:3.9.11-management
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    environment:
     - RABBITMQ_DEFAULT_PASS=guest
     - RABBITMQ_DEFAULT_USER=guest
     - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/mnesia
      - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/mnesia
    ports:
      - 5672:5672
      - 15672:15672
      - 15674:15674
    expose:
      - 5672
      - 15672
      - 15674
    networks:
      mongo-compose-network:
        ipv4_address: 172.1.0.6

 # processors:
  #  build:
   #   context: ../processors
    #  dockerfile: Dockerfile
   # depends_on:
    #  - rabbitmq
    #networks:
     # mongo-compose-network:
      #  ipv4_address: 172.18.0.8

  data_generation:
    build:
      context: ../data_generation
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    networks:
      mongo-compose-network:
        ipv4_address: 172.1.0.9
      #command: tail -F anything


networks: 
  mongo-compose-network:
    ipam:
      driver: default
      config:
        - subnet: 172.1.0.0/16